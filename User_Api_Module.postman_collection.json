{
	"info": {
		"_postman_id": "85837d37-ea8a-4829-a9c1-e058576311c7",
		"name": "User_Api_Module",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40503757"
	},
	"item": [
		{
			"name": "For All Users with Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "//Get Request for All Users with status code 200 OK",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://userserviceapp-f5a54828541b.herokuapp.com/uap/users",
					"protocol": "https",
					"host": [
						"userserviceapp-f5a54828541b",
						"herokuapp",
						"com"
					],
					"path": [
						"uap",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "USER by USERID with Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
							"});\r",
							"// Test to check if the response body contains the user_id property\r",
							"pm.test(\"Response body has the user_id property\", function () {\r",
							"    pm.expect(pm.response.json()).to.have.property('user_id');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "//GET user by USERID\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://userserviceapp-f5a54828541b.herokuapp.com/uap/user/1",
					"protocol": "https",
					"host": [
						"userserviceapp-f5a54828541b",
						"herokuapp",
						"com"
					],
					"path": [
						"uap",
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "User by FirstName with Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "//GET user by USER First Name ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://userserviceapp-f5a54828541b.herokuapp.com/uap/users/username/Numpy",
					"protocol": "https",
					"host": [
						"userserviceapp-f5a54828541b",
						"herokuapp",
						"com"
					],
					"path": [
						"uap",
						"users",
						"username",
						"Numpy"
					]
				}
			},
			"response": []
		},
		{
			"name": "request with Invalid HTTP",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"//Validation for Invalid HTTP Request\r",
							"pm.test(\"Status code is 404 NOT FOUND \", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"//Status Code Validation 200 Ok should Fail with invalid request\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\r\n\r\n\r\n//GET request with invalid HTTP Request",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://userserviceapp-f5a54828541b.herokuapp.com/users/username/Numpy",
					"protocol": "https",
					"host": [
						"userserviceapp-f5a54828541b",
						"herokuapp",
						"com"
					],
					"path": [
						"users",
						"username",
						"Numpy"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "userapi@2025\r\n  \r\n",
				"type": "string"
			},
			{
				"key": "username",
				"value": " Numpy@gmail.com",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}